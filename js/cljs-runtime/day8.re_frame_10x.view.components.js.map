{"version":3,"file":"day8.re_frame_10x.view.components.js","sources":["day8/re_frame_10x/view/components.cljs"],"mappings":"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","names":["p__25885","map__25886","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","day8.re-frame-10x.view.components/search-input","title","placeholder","on-save","on-change","on-stop","val","mranderson047.reagent.v0v7v0.reagent.core.atom.cljs$core$IFn$_invoke$arity$1","save","v","cljs.core/deref","clojure.string/trim","cljs.core/count","p1__25883#","p1__25884#","cljs.core/reset!","G__25888","day8.re-frame-10x.view.components/scroll!","el","start","end","time","goog.fx.dom/Scroll","cljs.core/clj->js","day8.re-frame-10x.view.components/scrolled-to-end?","tolerance","p__25908","map__25909","day8.re-frame-10x.view.components/autoscroll-list","class","scroll?","child","node","should-scroll","mranderson047.reagent.v0v7v0.reagent.core/create-class","_","and__3911__auto__","p__25914","map__25916","dom-node","day8.re-frame-10x.view.components/string->css","css-string","clojure.string.split.cljs$core$IFn$_invoke$arity$2","p1__25933#","cljs.core.map.cljs$core$IFn$_invoke$arity$2","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3","p__25934","vec__25935","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","acc","property","value","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","cljs.core.keyword.cljs$core$IFn$_invoke$arity$1","day8.re-frame-10x.view.components/default-cljs-devtools-prefs","devtools.prefs/default-config","day8.re-frame-10x.view.components/reset-wrapping","clojure.string/replace","day8.re-frame-10x.view.components/customized-cljs-devtools-prefs","day8.re-frame-10x.view.components/effective-cljs-devtools-prefs","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic","var_args","args__4500__auto__","len__4497__auto__","i__4498__auto__","argseq__4501__auto__","cljs.core/IndexedSeq","day8.re-frame-10x.view.components/make-devtools-api-call","seq25938","G__25939","cljs.core/first","cljs.core/next","api-fn","args","previous-config__25872__auto__","devtools.prefs/get-prefs","prefs__25873__auto__","devtools.prefs/set-prefs!","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","js/Error","day8.re-frame-10x.view.components/cljs-devtools-header","seq25944","cljs.core/seq","cljs.core.apply.cljs$core$IFn$_invoke$arity$3","devtools.formatters.core/header-api-call","day8.re-frame-10x.view.components/cljs-devtools-body","seq25949","devtools.formatters.core/body-api-call","day8.re-frame-10x.view.components/cljs-devtools-has-body","seq25953","devtools.formatters.core/has-body-api-call","day8.re-frame-10x.view.components/get-object","jsonml","day8.re-frame-10x.view.components/get-config","day8.re-frame-10x.view.components/data-structure","path","expanded?","G__25957","mranderson047.re-frame.v0v10v2.re-frame.core/subscribe","G__25958","mranderson047.re-frame.v0v10v2.re-frame.core/dispatch","day8.re_frame_10x.view.components.cljs_devtools_has_body.cljs$core$IFn$_invoke$arity$variadic","G__25959","G__25960","day8.re-frame-10x.view.components/jsonml->hiccup","day8.re_frame_10x.view.components.cljs_devtools_body.cljs$core$IFn$_invoke$arity$variadic","cljs.core.conj.cljs$core$IFn$_invoke$arity$2","G__25961","G__25962","day8.re_frame_10x.view.components.cljs_devtools_header.cljs$core$IFn$_invoke$arity$variadic","vec__25963","seq__25964","first__25965","tag-name","attributes","children","tagnames","cljs.core/contains?","cljs.core.into.cljs$core$IFn$_invoke$arity$3","cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1","cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1","i","G__25966","G__25967","day8.re-frame-10x.view.components/subtree","data","G__25968","day8.re-frame-10x.utils.re-com/v-box","day8.re-frame-10x.utils.re-com/h-box","clojure.string.join.cljs$core$IFn$_invoke$arity$2","G__25969","or__3922__auto__","cljs.core/boolean?","cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic","day8.re-frame-10x.view.components/subscription-render","day8.re-frame-10x.view.components/simple-render","p__25973","vec__25974","seq25970","G__25971","G__25972","day8.re-frame-10x.view.components/tag","label","day8.re-frame-10x.utils.re-com/box"],"sourcesContent":["(ns day8.re-frame-10x.view.components\n  (:require [clojure.string :as str]\n            [goog.fx.dom :as fx]\n            [mranderson047.re-frame.v0v10v2.re-frame.core :as rf]\n            [clojure.string :as str]\n            [day8.re-frame-10x.utils.re-com :as rc]\n            [mranderson047.reagent.v0v7v0.reagent.core :as r]\n            [devtools.prefs])\n  (:require-macros [day8.re-frame-10x.utils.macros :refer [with-cljs-devtools-prefs]]))\n\n(defn search-input [{:keys [title placeholder on-save on-change on-stop]}]\n  (let [val  (r/atom title)\n        save #(let [v (-> @val str str/trim)]\n                (when (pos? (count v))\n                  (on-save v)))]\n    (fn []\n      [:input {:type        \"text\"\n               :value       @val\n               :auto-focus  true\n               :placeholder placeholder\n               :size        (if (> 20 (count (str @val)))\n                              25\n                              (count (str @val)))\n               :on-change   #(do (reset! val (-> % .-target .-value))\n                                 (on-change %))\n               :on-key-down #(case (.-which %)\n                               13 (do\n                                    (save)\n                                    (reset! val \"\"))\n                               nil)}])))\n\n(defn scroll! [el start end time]\n  (.play (fx/Scroll. el (clj->js start) (clj->js end) time)))\n\n(defn scrolled-to-end? [el tolerance]\n  ;; at-end?: element.scrollHeight - element.scrollTop === element.clientHeight\n  (> tolerance (- (.-scrollHeight el) (.-scrollTop el) (.-clientHeight el))))\n\n(defn autoscroll-list [{:keys [class scroll?]} child]\n  \"Reagent component that enables scrolling for the elements of its child dom-node.\n   Scrolling is only enabled if the list is scrolled to the end.\n   Scrolling can be set as option for debugging purposes.\n   Thanks to Martin Klepsch! Original code can be found here:\n       https://gist.github.com/martinklepsch/440e6fd96714fac8c66d892e0be2aaa0\"\n  (let [node          (r/atom nil)\n        should-scroll (r/atom true)]\n    (r/create-class\n      {:display-name \"autoscroll-list\"\n       :component-did-mount\n                     (fn [_]\n                       (scroll! @node [0 (.-scrollTop @node)] [0 (.-scrollHeight @node)] 0))\n       :component-will-update\n                     (fn [_]\n                       (reset! should-scroll (scrolled-to-end? @node 100)))\n       :component-did-update\n                     (fn [_]\n                       (when (and scroll? @should-scroll)\n                         (scroll! @node [0 (.-scrollTop @node)] [0 (.-scrollHeight @node)] 500)))\n       :reagent-render\n                     (fn [{:keys [class]} child]\n                       [:div {:class class :ref (fn [dom-node]\n                                                  (reset! node dom-node))}\n                        child])})))\n\n;; Data browser\n\n(defn string->css [css-string]\n  \"This function converts jsonml css-strings to valid css maps for hiccup.\n  Example: 'margin-left:0px;min-height:14px;' converts to\n           {:margin-left '0px', :min-height '14px'}\"\n\n  (->> (str/split css-string #\";\")\n       (map #(str/split % #\":\"))\n       (reduce (fn [acc [property value]]\n                 (assoc acc (keyword property) value)) {})))\n\n(declare jsonml->hiccup)\n\n(def default-cljs-devtools-prefs @devtools.prefs/default-config)\n\n(defn reset-wrapping [css-string]\n  (str/replace css-string #\"white-space:nowrap;\" \"\"))\n\n(def customized-cljs-devtools-prefs\n  {; Override some cljs-devtools default styles.\n\n   ; The goal here is to make default styles more flexible and wrap at the edge of our panel (we don't want horizontal\n   ; scrolling). Technically we want to remove all 'white-space:no-wrap'.\n   ; See https://github.com/binaryage/cljs-devtools/blob/master/src/lib/devtools/defaults.cljs\n   ;; Commented out as this causes some other issues too.\n   ;:header-style (reset-wrapping (:header-style default-cljs-devtools-prefs))\n   ;:expandable-style (reset-wrapping (:expandable-style default-cljs-devtools-prefs))\n   ;:item-style (reset-wrapping (:item-style default-cljs-devtools-prefs))\n\n   ; Hide the index spans on the left hand of collections. Shows how many elements in a collection.\n   :none-style                     \"display: none\"\n   :index-tag                      [:span :none-style]\n   :min-expandable-sequable-count-for-well-known-types\n   3\n\n   ; Our JSON renderer does not have hierarchy depth limit,\n   ; See https://github.com/binaryage/cljs-devtools/blob/master/src/lib/devtools/formatters/budgeting.cljs\n   :initial-hierarchy-depth-budget false})\n\n(def effective-cljs-devtools-prefs (merge default-cljs-devtools-prefs customized-cljs-devtools-prefs))\n\n(defn make-devtools-api-call [api-fn & args]\n  (with-cljs-devtools-prefs effective-cljs-devtools-prefs\n    (apply api-fn args)))\n\n(defn cljs-devtools-header [& args]\n  (apply make-devtools-api-call devtools.formatters.core/header-api-call args))\n\n(defn cljs-devtools-body [& args]\n  (apply make-devtools-api-call devtools.formatters.core/body-api-call args))\n\n(defn cljs-devtools-has-body [& args]\n  (apply make-devtools-api-call devtools.formatters.core/has-body-api-call args))\n\n(defn get-object [jsonml]\n  (.-object (get jsonml 1)))\n\n(defn get-config [jsonml]\n  (.-config (get jsonml 1)))\n\n(defn data-structure [jsonml path]\n  (let [expanded? (rf/subscribe [:app-db/node-expanded? path])]\n    (fn [jsonml path]\n      [:span\n       {:class (str \"re-frame-10x--object\" (when @expanded? \" expanded\"))}\n       [:span {:class    \"toggle\"\n               :on-click #(rf/dispatch [:app-db/toggle-expansion path])}\n        [:button.expansion-button (if @expanded? \"\u25bc\" \"\u25b6\")]]\n       (if (and @expanded? (cljs-devtools-has-body (get-object jsonml) (get-config jsonml)))\n         (jsonml->hiccup\n           (cljs-devtools-body\n             (get-object jsonml)\n             (get-config jsonml))\n           (conj path :body))\n         (jsonml->hiccup\n           (cljs-devtools-header\n             (get-object jsonml)\n             (get-config jsonml))\n           (conj path :header)))])))\n\n(defn jsonml->hiccup\n  \"JSONML is the format used by Chrome's Custom Object Formatters.\n  The spec is at https://docs.google.com/document/d/1FTascZXT9cxfetuPRT2eXPQKXui4nWFivUnS_335T3U/preview.\n\n  JSONML is pretty much Hiccup over JSON. Chrome's implementation of this can\n  be found at https://cs.chromium.org/chromium/src/third_party/WebKit/Source/devtools/front_end/object_ui/CustomPreviewComponent.js\n  \"\n  [jsonml path]\n  (if (number? jsonml)\n    jsonml\n    (let [[tag-name attributes & children] jsonml\n          tagnames #{\"div\" \"span\" \"ol\" \"li\" \"table\" \"tr\" \"td\"}]\n      (cond\n        (contains? tagnames tag-name) (into\n                                        [(keyword tag-name) {:style (-> (js->clj attributes)\n                                                                        (get \"style\")\n                                                                        (string->css))}]\n                                        (map-indexed (fn [i child] (jsonml->hiccup child (conj path i))))\n                                        children)\n\n        (= tag-name \"object\") [data-structure jsonml path]\n        :else jsonml))))\n\n(defn subtree [data title path]\n  (let [expanded? (rf/subscribe [:app-db/node-expanded? path])]\n    (fn [data]\n      [rc/v-box\n       :children\n       [[rc/h-box\n         :align :center\n         :class (str/join \" \" [\"re-frame-10x--object\"\n                               (when @expanded? \"expanded\")])\n         :children\n         [[:span {:class    \"toggle\"\n                  :on-click #(rf/dispatch [:app-db/toggle-expansion path])}\n           [:button.expansion-button (if @expanded? \"\u25bc \" \"\u25b6 \")]]\n          (or title \"data\")]]\n        [rc/h-box\n         :children [[:div {:style {:margin-left 20}}\n                     (cond\n                       (and @expanded?\n                            (or (string? data)\n                                (number? data)\n                                (boolean? data)\n                                (nil? data))) [:div {:style {:margin \"10px 0\"}} (prn-str data)]\n                       @expanded? (jsonml->hiccup (cljs-devtools-header data) (conj path 0)))]]]]])))\n\n(defn subscription-render [data title path]\n  (let [expanded? (r/atom true) #_(rf/subscribe [:app-db/node-expanded? path])]\n    (fn [data]\n      [:div\n       {:class (str/join \" \" [\"re-frame-10x--object\"\n                              (when @expanded? \"expanded\")])}\n       #_[:span {:class    \"toggle\"\n                 :on-click #(rf/dispatch [:app-db/toggle-expansion path])}\n          [:button.expansion-button (if @expanded? \"\u25bc \" \"\u25b6 \")]]\n       (or title \"data\")\n       [:div {:style {:margin-left 20}}\n        (cond\n          (and @expanded?\n               (or (string? data)\n                   (number? data)\n                   (boolean? data)\n                   (nil? data))) [:div {:style {:margin \"10px 0\"}} (prn-str data)]\n          @expanded? (jsonml->hiccup (cljs-devtools-header data) (conj path 0)))]])))\n\n(defn simple-render [data path & [class]]\n  (let [expanded? (r/atom true) #_(rf/subscribe [:app-db/node-expanded? path])]\n    (fn [data]\n      [:div\n       {:class (str/join \" \" [\"re-frame-10x--object\"\n                              (when @expanded? \"expanded\")\n                              class])}\n       #_[:span {:class    \"toggle\"\n                 :on-click #(rf/dispatch [:app-db/toggle-expansion path])}\n          [:button.expansion-button (if @expanded? \"\u25bc \" \"\u25b6 \")]]\n       [:div #_{:style {:margin-left 20}}\n        (cond\n          (and @expanded?\n               (or (string? data)\n                   (number? data)\n                   (boolean? data)\n                   (nil? data))) [:div {:style {:margin \"10px 0\"}} (prn-str data)]\n          @expanded? (jsonml->hiccup (cljs-devtools-header data) (conj path 0)))]])))\n\n(defn tag [class label]\n  [rc/box\n   :class (str \"rft-tag noselect \" class)\n   :child [:span {:style {:margin \"auto\"}} label]])\n"]}