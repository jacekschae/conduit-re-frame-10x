{"version":3,"file":"ajax.core.js","sources":["ajax/core.cljc"],"mappings":";;;;;;;;;;;;;;;AA8BA,AAAK6D,2BAAeC;AAEpB,kBAAA,lBAAMzB,4CAAOC;AAAb,AAAA;AAEE,OAACS,sBAAUT;;AAIb,AAAKqB,gCAAoBC;AACzB,AAAKnC,iCAAqBC;AAE1B,AAAKa,mCAAuBC;AAC5B,AAAK6B,oCAAwBC;AAE7B,AAAK3B,iCAAqBC;AAE1B,AAAKjB,+BAAmBC;AAExB,AAAKI,gCAAoBC;AACzB,AAAKsC,iCAAqBC;AAE1B,AAAK3B,gCAAoBC;AAIzB,AAAKvB,iCAAqBC;AAE1B,AAAK2B,yBAAaC;AAIlB,AAAKX,4BAAgBC;AAQrB,AAAKrB,mCAAuBC;AAE5B,AAAA;;;;;;;;;;;;;gBAAA,wBAAAtB,xCAAYkE;AAAZ,AAAA,IAAAjE,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAAiE,mDAAA,CAAA,UAAA,MAAA9D;;;AAAA,AAAA,AAAA,AAAA8D,qDAAA,WAAA3D,IAAAC;AAAA,AAAA,IAAAC,mBAAA,AAAAC,gBAAAF;AAAA,AAAA,OAAAG,4BAAAJ,IAAA,MAAA,EAAA,CAAAE,4BAAAG,oBAAA,AAAAC,8CAAAC,mBAAAN,MAAAC;;;AAAA,AAAA,AAAAyD,wCAAA;;AAAA,AAAA,AAAAA,kCAAA,WAAAC;AAAA,AAAA,IAAAC,WAAA,AAAA1D,gBAAAyD;IAAAA,eAAA,AAAAlD,eAAAkD;AAAA,AAAA,OAAAD,mDAAAE,SAAAD;;;AACA,AAAA,AADA;;;;;;;;;;;;;iBACA,yBAAAnE,1CAAYkB;AAAZ,AAAA,IAAAjB,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAAiB,oDAAA,CAAA,UAAA,MAAAd;;;AAAA,AAAA,AAAA,AAAAc,sDAAA,WAAAX,IAAAC;AAAA,AAAA,IAAAC,mBAAA,AAAAC,gBAAAF;AAAA,AAAA,OAAAG,4BAAAJ,IAAA,OAAA,EAAA,CAAAE,4BAAAG,oBAAA,AAAAC,8CAAAC,mBAAAN,MAAAC;;;AAAA,AAAA,AAAAS,yCAAA;;AAAA,AAAA,AAAAA,mCAAA,WAAAC;AAAA,AAAA,IAAAC,WAAA,AAAAV,gBAAAS;IAAAA,eAAA,AAAAF,eAAAE;AAAA,AAAA,OAAAD,oDAAAE,SAAAD;;;AAAA,AACA,AAAA;;;;;;;;;;;;;iBAAA,yBAAAnB,1CAAY+D;AAAZ,AAAA,IAAA9D,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAA8D,oDAAA,CAAA,UAAA,MAAA3D;;;AAAA,AAAA,AAAA,AAAA2D,sDAAA,WAAAxD,IAAAC;AAAA,AAAA,IAAAC,mBAAA,AAAAC,gBAAAF;AAAA,AAAA,OAAAG,4BAAAJ,IAAA,OAAA,EAAA,CAAAE,4BAAAG,oBAAA,AAAAC,8CAAAC,mBAAAN,MAAAC;;;AAAA,AAAA,AAAAsD,yCAAA;;AAAA,AAAA,AAAAA,mCAAA,WAAAC;AAAA,AAAA,IAAAC,WAAA,AAAAvD,gBAAAsD;IAAAA,eAAA,AAAA/C,eAAA+C;AAAA,AAAA,OAAAD,oDAAAE,SAAAD;;;AACA,AAAA,AADA;;;;;;;;;;;;;gBACA,wBAAAhE,xCAAYM;AAAZ,AAAA,IAAAL,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAAK,mDAAA,CAAA,UAAA,MAAAF;;;AAAA,AAAA,AAAA,AAAAE,qDAAA,WAAAC,IAAAC;AAAA,AAAA,IAAAC,mBAAA,AAAAC,gBAAAF;AAAA,AAAA,OAAAG,4BAAAJ,IAAA,MAAA,EAAA,CAAAE,4BAAAG,oBAAA,AAAAC,8CAAAC,mBAAAN,MAAAC;;;AAAA,AAAA,AAAAH,wCAAA;;AAAA,AAAA,AAAAA,kCAAA,WAAAS;AAAA,AAAA,IAAAC,WAAA,AAAAN,gBAAAK;IAAAA,eAAA,AAAAE,eAAAF;AAAA,AAAA,OAAAT,mDAAAU,SAAAD;;;AAAA,AACA,AAAA;;;;;;;;;;;;;mBAAA,2BAAAf,9CAAYkC;AAAZ,AAAA,IAAAjC,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAAiC,sDAAA,CAAA,UAAA,MAAA9B;;;AAAA,AAAA,AAAA,AAAA8B,wDAAA,WAAA3B,IAAAC;AAAA,AAAA,IAAAC,mBAAA,AAAAC,gBAAAF;AAAA,AAAA,OAAAG,4BAAAJ,IAAA,SAAA,EAAA,CAAAE,4BAAAG,oBAAA,AAAAC,8CAAAC,mBAAAN,MAAAC;;;AAAA,AAAA,AAAAyB,2CAAA;;AAAA,AAAA,AAAAA,qCAAA,WAAAC;AAAA,AAAA,IAAAC,WAAA,AAAA1B,gBAAAyB;IAAAA,eAAA,AAAAlB,eAAAkB;AAAA,AAAA,OAAAD,sDAAAE,SAAAD;;;AAAA,AACA,AAAA;;;;;;;;;;;;;oBAAA,4BAAAnC,hDAAYgD;AAAZ,AAAA,IAAA/C,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAA+C,uDAAA,CAAA,UAAA,MAAA5C;;;AAAA,AAAA,AAAA,AAAA4C,yDAAA,WAAAzC,IAAAC;AAAA,AAAA,IAAAC,mBAAA,AAAAC,gBAAAF;AAAA,AAAA,OAAAG,4BAAAJ,IAAA,UAAA,EAAA,CAAAE,4BAAAG,oBAAA,AAAAC,8CAAAC,mBAAAN,MAAAC;;;AAAA,AAAA,AAAAuC,4CAAA;;AAAA,AAAA,AAAAA,sCAAA,WAAAC;AAAA,AAAA,IAAAC,WAAA,AAAAxC,gBAAAuC;IAAAA,eAAA,AAAAhC,eAAAgC;AAAA,AAAA,OAAAD,uDAAAE,SAAAD;;;AACA,AAAA,AADA;;;;;;;;;;;;;kBACA,0BAAAjD,5CAAY6B;AAAZ,AAAA,IAAA5B,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAA4B,qDAAA,CAAA,UAAA,MAAAzB;;;AAAA,AAAA,AAAA,AAAAyB,uDAAA,WAAAtB,IAAAC;AAAA,AAAA,IAAAC,mBAAA,AAAAC,gBAAAF;AAAA,AAAA,OAAAG,4BAAAJ,IAAA,QAAA,EAAA,CAAAE,4BAAAG,oBAAA,AAAAC,8CAAAC,mBAAAN,MAAAC;;;AAAA,AAAA,AAAAoB,0CAAA;;AAAA,AAAA,AAAAA,oCAAA,WAAAC;AAAA,AAAA,IAAAC,WAAA,AAAArB,gBAAAoB;IAAAA,eAAA,AAAAb,eAAAa;AAAA,AAAA,OAAAD,qDAAAE,SAAAD;;;AAAA,AACA,AAAA;;;;;;;;;;;;;kBAAA,0BAAA9B,5CAAYqD;AAAZ,AAAA,IAAApD,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAAoD,qDAAA,CAAA,UAAA,MAAAjD;;;AAAA,AAAA,AAAA,AAAAiD,uDAAA,WAAA9C,IAAAC;AAAA,AAAA,IAAAC,mBAAA,AAAAC,gBAAAF;AAAA,AAAA,OAAAG,4BAAAJ,IAAA,QAAA,EAAA,CAAAE,4BAAAG,oBAAA,AAAAC,8CAAAC,mBAAAN,MAAAC;;;AAAA,AAAA,AAAA4C,0CAAA;;AAAA,AAAA,AAAAA,oCAAA,WAAAC;AAAA,AAAA,IAAAC,WAAA,AAAA7C,gBAAA4C;IAAAA,eAAA,AAAArC,eAAAqC;AAAA,AAAA,OAAAD,qDAAAE,SAAAD;;;AAAA,AACA,AAAA;;;;;;;;;;;;;kBAAA,0BAAAtD,5CAAYwD;AAAZ,AAAA,IAAAvD,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAAuD,qDAAA,CAAA,UAAA,MAAApD;;;AAAA,AAAA,AAAA,AAAAoD,uDAAA,WAAAjD,IAAAC;AAAA,AAAA,IAAAC,mBAAA,AAAAC,gBAAAF;AAAA,AAAA,OAAAG,4BAAAJ,IAAA,QAAA,EAAA,CAAAE,4BAAAG,oBAAA,AAAAC,8CAAAC,mBAAAN,MAAAC;;;AAAA,AAAA,AAAA+C,0CAAA;;AAAA,AAAA,AAAAA,oCAAA,WAAAC;AAAA,AAAA,IAAAC,WAAA,AAAAhD,gBAAA+C;IAAAA,eAAA,AAAAxC,eAAAwC;AAAA,AAAA,OAAAD,qDAAAE,SAAAD;;;AAAA","names":["var_args","args__4500__auto__","len__4497__auto__","i__4498__auto__","argseq__4501__auto__","cljs.core/IndexedSeq","ajax.core/PUT","uri","opts","f__38881__auto__","cljs.core/first","ajax.easy/easy-ajax-request","cljs.core/Keyword","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","seq40079","G__40080","cljs.core/next","ajax.core/HEAD","seq40033","G__40034","ajax.core/detect-response-format","ajax.easy/detect-response-format","ajax.core/default-interceptors","ajax.simple/default-interceptors","ajax.core/json-response-format","ajax.json/json-response-format","ajax.core/url-request-format","ajax.url/url-request-format","ajax.core/TRACE","seq40094","G__40095","ajax.core/text-request-format","ajax.formats/text-request-format","ajax.core/DELETE","seq40084","G__40085","ajax.core/abort","this","ajax.core/transit-request-format","ajax.transit/transit-request-format","ajax.core/default-formats","ajax.easy/default-formats","ajax.core/ring-response-format","ajax.ring/ring-response-format","ajax.core/raw-response-format","ajax.formats/raw-response-format","ajax.protocols/-abort","ajax.core/OPTIONS","seq40089","G__40090","ajax.core/ajax-request","ajax.simple/ajax-request","ajax.core/PATCH","seq40099","G__40100","ajax.core/PURGE","seq40104","G__40105","ajax.core/json-request-format","ajax.json/json-request-format","ajax.core/to-interceptor","ajax.interceptors/to-interceptor","ajax.core/POST","seq40058","G__40059","ajax.core/GET","seq40008","G__40009","ajax.core/transit-response-format","ajax.transit/transit-response-format","ajax.core/text-response-format","ajax.formats/text-response-format"],"sourcesContent":["(ns ajax.core\n  \"This is the documented API for cljs-ajax. The only functions not\n   exposed here that are documented are the deprecated features.\"\n  (:require [clojure.string :as str]\n            [ajax.url :as url]\n            [ajax.json :as json]\n            [ajax.transit :as transit]\n            [ajax.ring :as ring]\n            [ajax.formats :as f]\n            [ajax.util :as u]\n            [ajax.interceptors :as i]\n            [ajax.simple :as simple]\n            [ajax.easy :as easy]\n            [ajax.protocols :as pr]\n            #?@ (:clj  [[ajax.macros :as m]\n                        [poppea :as p]\n                        [ajax.apache]]\n                 :cljs [[ajax.xhrio]\n                        [ajax.xml-http-request]]))\n  #? (:cljs\n      (:require-macros [ajax.macros :as m])))\n\n;;; NB As a matter of policy, this file shouldn't reference any\n;;; google closure files. That functionality should be off in\n;;; specific namespaces and exposed here in a platform indepdent\n;;; way\n\n;;; Ideally this would be true of all functionality, but it's\n;;; an ongoing project.\n\n(def to-interceptor i/to-interceptor)\n\n(defn abort [this]\n  \"Call this on the result of `ajax-request` to cancel the request.\"\n  (pr/-abort this))\n\n;;; Standard Formats\n\n(def json-request-format json/json-request-format)\n(def json-response-format json/json-response-format)\n\n(def transit-request-format transit/transit-request-format)\n(def transit-response-format transit/transit-response-format)\n\n(def ring-response-format ring/ring-response-format)\n\n(def url-request-format url/url-request-format)\n\n(def text-request-format f/text-request-format)\n(def text-response-format f/text-response-format)\n; There's no raw-request-format because it's handled by the DirectSubmission code\n(def raw-response-format f/raw-response-format)\n\n;;; Here's the entire \"simple\" API.\n\n(def default-interceptors simple/default-interceptors)\n\n(def ajax-request simple/ajax-request)\n\n;;; \"Easy\" API beyond this point\n\n(def default-formats easy/default-formats)\n\n;;; NB detect-response-format with no parameters will pull\n;;; in every non-deprecated format in the code and so is\n;;; considered part of the \"easy\" API. However,\n;;; using your own vector specification works with the\n;;; simple API and allows you to control what formats you\n;;; want to support.\n(def detect-response-format easy/detect-response-format)\n\n(m/easy-api GET)\n(m/easy-api HEAD)\n(m/easy-api POST)\n(m/easy-api PUT)\n(m/easy-api DELETE)\n(m/easy-api OPTIONS)\n(m/easy-api TRACE)\n(m/easy-api PATCH)\n(m/easy-api PURGE)\n"]}