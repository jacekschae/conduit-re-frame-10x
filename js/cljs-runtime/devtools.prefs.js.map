{"version":3,"file":"devtools.prefs.js","sources":["devtools/prefs.cljs"],"mappings":";;;AAKA,AAAKgC,gCAAe,KAAA/B,gBAAA;AAAA,AAAA,OAAA8B,gBAAQE;GAAR;AACpB,AAAKN,iCAAgB,KAAA1B,gBAAA;AAAA,AAAO;GAAP;AACrB,AAAKD,4BAAW,KAAAC,gBAAA;AAAA,AAAO;GAAP;AAChB,AAAKkC,gCAAe,KAAAlC,gBAAA;AAAA,AAAO,8GAAA,AAAA8B,+CAAA,AAAAA,gDAAA,AAAAA,tMAACP,uHAAOQ,+CAAgBL,gDAAiB3B;GAAhD;AAEpB,AAAeE,4CAAiB,KAAAD,gBAAA;AAAA,AAAA,OAAA8B,gBAAQI;GAAR;AAIhC,iCAAA,jCAAMZ,0EAAYpB;AAChB,OAAMD,4CAAiBC,nDADzB;;AAGA,2BAAA,3BAAMsB;AAAN,AACE,GAAM,AAACW,uBAAOlC;AACZ,+BAAA,AAAA6B,/BAACR,+CAAYrB,/CADf;;AAAA;;AAEAA;;AAEF,sBAAA,tBAAMkB,oDAAMJ;AAAZ,AACE,IAAAc,WAAK,AAACL;AAAN,AAAA,8EAAAK,0BAAAA,hGAACd,oCAAAA,8CAAAA;;AAEH,gCAAA,hCAAMM,wEAAWN,IAAIa;AAArB,AACE,OAACN,+BAAW,AAACW,8CAAM,AAACT,2BAAWT,IAAIa;;AAErC,mCAAA,nCAAMD,8EAAcF;AAClB,OAACH,+BAAW,AAACC,uGAAM,AAACC,2BAAWC,xKADjC;;AAGA,AAAA,mCAAA,2CAAAtB,9EAAMM;AAAN,AAAA,IAAAL,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAAK,sEAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAAF;;;AAAA,AAAA,AAAA,AAAAE,wEAAA,WAAoBM,IAAIC,EAAIC;AAA5B,kFAC+BF,KAAKE,zBAAX,hDAARC,dAAf,4DAAqBF,EAAGG,hDAAV,VAARC;AAAN,AACE,OAACC,8BAAUN,IAAIK;;;AAFnB,AAAA,AAAAX,2DAAA;;AAAA,AAAA,AAAAA,qDAAA,WAAAC;AAAA,AAAA,IAAAC,WAAA,AAAAC,gBAAAF;IAAAA,eAAA,AAAAG,eAAAH;IAAAI,WAAA,AAAAF,gBAAAF;IAAAA,eAAA,AAAAG,eAAAH;AAAA,AAAA,OAAAD,sEAAAE,SAAAG,SAAAJ;;;AAAA","names":["devtools.prefs/env-config","cljs.core/Delay","devtools.prefs/*current-config*","new-prefs","var_args","args__4500__auto__","len__4497__auto__","i__4498__auto__","argseq__4501__auto__","cljs.core/IndexedSeq","devtools.prefs/update-pref!","seq28776","G__28777","cljs.core/first","cljs.core/next","G__28778","key","f","args","cljs.core.apply.cljs$core$IFn$_invoke$arity$3","devtools.prefs/pref","new-val","devtools.prefs/set-pref!","devtools.prefs/set-prefs!","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic","devtools.prefs/get-prefs","m","devtools.prefs/external-config","devtools.prefs/merge-prefs!","val","G__28761","cljs.core/deref","devtools.prefs/default-config","devtools.defaults/config","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","devtools.prefs/initial-config","cljs.core/delay?"],"sourcesContent":["(ns devtools.prefs\n  (:require-macros [devtools.prefs :refer [emit-external-config emit-env-config]])\n  (:require [devtools.defaults :as defaults]))\n\n; we use delay for DCE, see https://github.com/binaryage/cljs-devtools/issues/37\n(def default-config (delay @defaults/config))\n(def external-config (delay (emit-external-config)))\n(def env-config (delay (emit-env-config)))\n(def initial-config (delay (merge @default-config @external-config @env-config)))\n\n(def ^:dynamic *current-config* (delay @initial-config))\n\n; -- public api -------------------------------------------------------------------------------------------------------------\n\n(defn set-prefs! [new-prefs]\n  (set! *current-config* new-prefs))\n\n(defn get-prefs []\n  (when (delay? *current-config*)\n    (set-prefs! @*current-config*))\n  *current-config*)\n\n(defn pref [key]\n  (key (get-prefs)))\n\n(defn set-pref! [key val]\n  (set-prefs! (assoc (get-prefs) key val)))\n\n(defn merge-prefs! [m]\n  (set-prefs! (merge (get-prefs) m)))\n\n(defn update-pref! [key f & args]\n  (let [new-val (apply f (pref key) args)]\n    (set-pref! key new-val)))\n"]}